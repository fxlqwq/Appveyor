# AppVeyor 构建配置 - Android 16 ISO 镜像构建
version: 1.0.{build}

# 构建镜像
image: Ubuntu2004

# 环境变量
environment:
  ANDROID_VERSION: "16"
  ISO_NAME: "android-16-x86_64"
  
# 克隆设置
clone_depth: 1
clone_folder: /home/appveyor/android-build

# 构建前准备
before_build:
  # 更新系统包
  - sudo apt-get update
  
  # 安装必要的构建工具
  - sudo apt-get install -y git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc unzip python3 python3-pip
  
  # 安装 repo 工具
  - curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
  - chmod a+x ~/bin/repo
  - export PATH=~/bin:$PATH
  
  # 配置 Git
  - git config --global user.name "AppVeyor Build"
  - git config --global user.email "build@appveyor.com"
  
  # 创建构建目录
  - mkdir -p /home/appveyor/android-x86
  - cd /home/appveyor/android-x86

# 构建脚本
build_script:
  # 初始化 Android-x86 源码仓库
  - repo init -u https://github.com/android-x86/manifest.git -b android-16.0
  
  # 同步源码
  - repo sync --force-sync -j$(nproc)
  
  # 设置构建环境
  - source build/envsetup.sh
  
  # 选择构建目标 (x86_64)
  - lunch android_x86_64-eng
  
  # 开始构建
  - make -j$(nproc) iso_img
  
  # 重命名生成的ISO文件
  - mv out/target/product/x86_64/android_x86_64.iso out/target/product/x86_64/${ISO_NAME}.iso

# 构建后处理
after_build:
  # 检查ISO文件是否生成成功
  - ls -la out/target/product/x86_64/
  
  # 计算ISO文件的校验和
  - cd out/target/product/x86_64/
  - sha256sum ${ISO_NAME}.iso > ${ISO_NAME}.iso.sha256
  - md5sum ${ISO_NAME}.iso > ${ISO_NAME}.iso.md5

# 构建产物
artifacts:
  - path: 'out/target/product/x86_64/$(ISO_NAME).iso'
    name: Android16_ISO
    type: File
  - path: 'out/target/product/x86_64/$(ISO_NAME).iso.sha256'
    name: Android16_ISO_SHA256
    type: File
  - path: 'out/target/product/x86_64/$(ISO_NAME).iso.md5'
    name: Android16_ISO_MD5
    type: File

# 部署设置
deploy:
  - provider: GitHub
    auth_token:
      secure: YOUR_GITHUB_TOKEN_HERE  # 在 AppVeyor 项目设置中加密你的 GitHub token
    artifact: /.*\.iso/
    draft: false
    prerelease: false
    on:
      branch: main
      APPVEYOR_REPO_TAG: true

# 缓存设置
cache:
  - ~/.ccache -> appveyor.yml
  - /home/appveyor/.gradle -> appveyor.yml

# 构建矩阵
matrix:
  fast_finish: true

# 通知设置
notifications:
  - provider: Email
    to:
      - your-email@example.com
    on_build_success: true
    on_build_failure: true
    on_build_status_changed: true

# 构建时间限制 (小时)
build:
  verbosity: minimal
